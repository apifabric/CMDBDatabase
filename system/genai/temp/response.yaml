"models":
- "classname": |-
    Server
  "code": |-
    class Server(Base):\n    __tablename__ = 'server'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    hostname = Column(String, nullable=False)\n    ip_address = Column(String, nullable=False)\n    location_id = Column(Integer, ForeignKey('location.id'))
  "description": |-
    Stores information about servers in the CMDB.
  "name": |-
    Server
- "classname": |-
    Location
  "code": |-
    class Location(Base):\n    __tablename__ = 'location'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    name = Column(String, nullable=False)\n    address = Column(String)
  "description": |-
    Represents a physical or logical location.
  "name": |-
    Location
- "classname": |-
    Application
  "code": |-
    class Application(Base):\n    __tablename__ = 'application'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    name = Column(String, nullable=False)\n    version = Column(String)\n    vendor_id = Column(Integer, ForeignKey('vendor.id'))
  "description": |-
    Details of applications including version and vendor.
  "name": |-
    Application
- "classname": |-
    Vendor
  "code": |-
    class Vendor(Base):\n    __tablename__ = 'vendor'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    name = Column(String, nullable=False)
  "description": |-
    Information about software vendors.
  "name": |-
    Vendor
- "classname": |-
    OperatingSystem
  "code": |-
    class OperatingSystem(Base):\n    __tablename__ = 'operating_system'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    name = Column(String, nullable=False)\n    version = Column(String)\n    vendor_id = Column(Integer, ForeignKey('vendor.id'))
  "description": |-
    Details about various operating systems used on servers.
  "name": |-
    OperatingSystem
- "classname": |-
    DeviceType
  "code": |-
    class DeviceType(Base):\n    __tablename__ = 'device_type'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    type_name = Column(String)
  "description": |-
    Different types of devices within the network.
  "name": |-
    DeviceType
- "classname": |-
    ConfigurationItem
  "code": |-
    class ConfigurationItem(Base):\n    __tablename__ = 'configuration_item'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    name = Column(String, nullable=False)\n    type_id = Column(Integer, ForeignKey('device_type.id'))\n    vendor_id = Column(Integer, ForeignKey('vendor.id'))
  "description": |-
    Represents different configuration items related to devices.
  "name": |-
    ConfigurationItem
- "classname": |-
    NetworkInterface
  "code": |-
    class NetworkInterface(Base):\n    __tablename__ = 'network_interface'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    ip_address = Column(String, nullable=False)\n    mac_address = Column(String, nullable=False)\n    server_id = Column(Integer, ForeignKey('server.id'))
  "description": |-
    Network interface cards for the servers.
  "name": |-
    NetworkInterface
- "classname": |-
    UserAccount
  "code": |-
    class UserAccount(Base):\n    __tablename__ = 'user_account'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    username = Column(String, nullable=False)\n    server_id = Column(Integer, ForeignKey('server.id'))
  "description": |-
    User accounts associated with servers.
  "name": |-
    UserAccount
- "classname": |-
    AccessLog
  "code": |-
    class AccessLog(Base):\n    __tablename__ = 'access_log'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    user_account_id = Column(Integer, ForeignKey('user_account.id'))\n    login_time = Column(DateTime)\n    logout_time = Column(DateTime)
  "description": |-
    Tracks user logins and logouts.
  "name": |-
    AccessLog
- "classname": |-
    MaintenanceSchedule
  "code": |-
    class MaintenanceSchedule(Base):\n    __tablename__ = 'maintenance_schedule'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    server_id = Column(Integer, ForeignKey('server.id'))\n    planned_date = Column(DateTime)
  "description": |-
    Scheduling of maintenance activities on servers.
  "name": |-
    MaintenanceSchedule
- "classname": |-
    Incident
  "code": |-
    class Incident(Base):\n    __tablename__ = 'incident'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    description = Column(String)\n    report_time = Column(DateTime)\n    resolution_time = Column(DateTime)\n    server_id = Column(Integer, ForeignKey('server.id'))
  "description": |-
    Records incidents occurring on the server systems.
  "name": |-
    Incident
"name": |-
  CMDBDatabase
"rules":
- "code": |-
    Sum(Location.server_count, Server.id)
  "description": |-
    Total count of servers for each location.
  "entity": |-
    Location
  "name": |-
    ServerCount
  "use_case": |-
    General
- "code": |-
    Sum(Vendor.application_count, Application.id)
  "description": |-
    Total applications provided by each vendor.
  "entity": |-
    Vendor
  "name": |-
    ApplicationVendorCount
  "use_case": |-
    General
"test_data": |-
  Generates mock data for each entity to ensure system's functionalities can be tested.
"test_data_rows":
- "code": |-
    server1 = Server(hostname="server01", ip_address="192.168.1.1", location_id=1)
  "test_data_row_variable": |-
    server1
- "code": |-
    server2 = Server(hostname="server02", ip_address="192.168.1.2", location_id=2)
  "test_data_row_variable": |-
    server2
- "code": |-
    server3 = Server(hostname="server03", ip_address="192.168.1.3", location_id=1)
  "test_data_row_variable": |-
    server3
- "code": |-
    server4 = Server(hostname="server04", ip_address="192.168.1.4", location_id=2)
  "test_data_row_variable": |-
    server4
- "code": |-
    location1 = Location(name="DataCenter 1", address="123 Main St.")
  "test_data_row_variable": |-
    location1
- "code": |-
    location2 = Location(name="DataCenter 2", address="456 Side St.")
  "test_data_row_variable": |-
    location2
- "code": |-
    location3 = Location(name="Remote Storage", address="789 Remote Rd.")
  "test_data_row_variable": |-
    location3
- "code": |-
    location4 = Location(name="HQ Office", address="10 HQ Blvd.")
  "test_data_row_variable": |-
    location4
"test_data_sqlite": |-
  Utilizes the same mock data for SQLite when conducting system tests.
